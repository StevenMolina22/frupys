---
interface Category {
  name: string;
  icon?: string;
  isActive?: boolean;
}

interface Props {
  categories: Category[];
}

const { categories } = Astro.props;
---

<ul class="flex flex-wrap items-center">
  {categories.map((category) => (
    <li class="my-1 mr-2.5">
      <a
        href="#"
        class={`group flex h-9 items-center ${
          category.isActive
            ? "justify-center rounded-lg bg-jacarta-100 px-4 font-display text-sm font-semibold text-jacarta-700 transition-colors hover:border-transparent hover:bg-accent hover:text-white dark:bg-jacarta-700 dark:text-white dark:hover:bg-accent"
            : "rounded-lg border border-jacarta-100 bg-white px-4 font-display text-sm font-semibold text-jacarta-500 transition-colors hover:border-transparent hover:bg-accent hover:text-white dark:border-jacarta-600 dark:bg-jacarta-900 dark:text-white dark:hover:border-transparent dark:hover:bg-accent dark:hover:text-white"
        }`}
      >
        {category.icon && (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            width="24"
            height="24"
            class="mr-1 h-4 w-4 fill-jacarta-700 transition-colors group-hover:fill-white dark:fill-jacarta-100"
          >
            <path fill="none" d="M0 0h24v24H0z"></path>
            <path d={category.icon}></path>
          </svg>
        )}
        <span>{category.name}</span>
      </a>
    </li>
  ))}
</ul>
